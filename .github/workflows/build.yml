on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-push:
    runs-on:  self-hosted
    strategy:
      matrix:
        service: [auth, booking, report, room, branding, message, assets]  # Elenco dei servizi
    steps:
      - name: Checkout del codice
        uses: actions/checkout@v4

      - name: Setup di Java e Maven (solo se necessario)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # Java version

      - name: Setup di Node.js (solo per assets)
        if: matrix.service == 'assets'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build frontend con npm (solo per assets)
        if: matrix.service == 'assets'
        run: |
          cd assets/js
          npm install
          npm run build

      - name: Build API con Maven (per Java e assets)
        run: |
          if [ "${{ matrix.service }}" == "assets" ]; then
            cd ${{ matrix.service }}/api
            mvn install  # Evitiamo "clean install" per non rimuovere gli assets
          else
            mvn clean install -DskipTests
          fi

      - name: Login su Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build dell'immagine per ${{ matrix.service }}
        run: docker build -t rafdanna28/spme-${{ matrix.service }}:${{ github.sha }} ./${{ matrix.service }}

      - name: Push su Docker Hub
        run: docker push rafdanna28/spme-${{ matrix.service }}:${{ github.sha }}
  deploy:
    runs-on: self-hosted
    needs: build-and-push  # Esegue il deploy solo dopo il build
    steps:
      - name: Connetti via SSH e aggiorna Kubernetes
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ“¢ Aggiornamento di Kubernetes su MicroK8s..."

            # Effettua il pull delle nuove immagini su MicroK8s
            for service in auth booking report room branding message assets; do
              echo "ðŸ”„ Aggiorno $service..."
              microk8s.kubectl set image deployment/spme-$service spme-$service=rafdanna28/spme-$service:${{ github.sha }} --record
            done

            # Mostra lo stato dei pod per verifica
            microk8s.kubectl get pods -o wide
