---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-booking
spec:
  selector:
    matchLabels:
      run: rbp-booking
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-booking
    spec:
      containers:
        - name: rbp-booking
          image: rafdanna28/spme-booking:commit-sha
          imagePullPolicy: Always
          env:
            - name: dbRefresh
              value: "10"
            - name: cors
              value: "*"
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              port: 3000
              path: /booking/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-room
spec:
  selector:
    matchLabels:
      run: rbp-room
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-room
    spec:
      containers:
        - name: rbp-room
          image: rafdanna28/spme-room:commit-sha
          imagePullPolicy: Always
          env:
            - name: dbRefresh
              value: "10"
            - name: cors
              value: "*"
          ports:
            - containerPort: 3001
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              port: 3001
              path: /room/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-branding
spec:
  selector:
    matchLabels:
      run: rbp-branding
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-branding
    spec:
      containers:
        - name: rbp-branding
          image: rafdanna28/spme-branding:commit-sha
          imagePullPolicy: Always
          env:
            - name: dbRefresh
              value: "10"
            - name: cors
              value: "*"
          ports:
            - containerPort: 3002
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              port: 3002
              path: /branding/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-assets
spec:
  selector:
    matchLabels:
      run: rbp-assets
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-assets
    spec:
      containers:
        - name: rbp-assets
          image: rafdanna28/spme-assets:commit-sha
          imagePullPolicy: Always
          ports:
            - containerPort: 3003
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              port: 3003
              path: /actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-auth
spec:
  selector:
    matchLabels:
      run: rbp-auth
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-auth
    spec:
      containers:
        - name: rbp-auth
          image: rafdanna28/spme-auth:commit-sha
          imagePullPolicy: Always
          env:
            - name: cors
              value: "*"
          ports:
            - containerPort: 3004
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              port: 3004
              path: /auth/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-report
spec:
  selector:
    matchLabels:
      run: rbp-report
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-report
    spec:
      containers:
        - name: rbp-report
          image: rafdanna28/spme-report:commit-sha
          imagePullPolicy: Always
          env:
            - name: cors
              value: "*"
          ports:
            - containerPort: 3005
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              port: 3005
              path: /report/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rbp-message
spec:
  selector:
    matchLabels:
      run: rbp-message
  replicas: 1
  template:
    metadata:
      labels:
        run: rbp-message
    spec:
      containers:
        - name: rbp-message
          image: rafdanna28/spme-message:commit-sha
          imagePullPolicy: Always
          env:
            - name: dbRefresh
              value: "10"
            - name: cors
              value: "*"
          ports:
            - containerPort: 3006
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              port: 3006
              path: /message/actuator/health
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 4
            successThreshold: 2
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-booking
  labels:
    app: rbp-booking
spec:
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
      nodePort: 32147
      targetPort: 3000
  selector:
    run: rbp-booking
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-room
  labels:
    app: rbp-room
spec:
  type: NodePort
  ports:
    - port: 3001
      protocol: TCP
      nodePort: 32148
      targetPort: 3001
  selector:
    run: rbp-room
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-branding
  labels:
    app: rbp-branding
spec:
  type: NodePort
  ports:
    - port: 3002
      protocol: TCP
      nodePort: 32149
      targetPort: 3002
  selector:
    run: rbp-branding
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-assets
  labels:
    app: rbp-assets
spec:
  type: NodePort
  ports:
    - port: 3003
      protocol: TCP
      nodePort: 32150
      targetPort: 3003
  selector:
    run: rbp-assets
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-auth
  labels:
    app: rbp-auth
spec:
  type: NodePort
  ports:
    - port: 3004
      protocol: TCP
      nodePort: 32151
      targetPort: 3004
  selector:
    run: rbp-auth
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-report
  labels:
    app: rbp-report
spec:
  type: NodePort
  ports:
    - port: 3005
      protocol: TCP
      nodePort: 32152
      targetPort: 3005
  selector:
    run: rbp-report
---
apiVersion: v1
kind: Service
metadata:
  name: rbp-message
  labels:
    app: rbp-message
spec:
  type: NodePort
  ports:
    - port: 3006
      protocol: TCP
      nodePort: 32153
      targetPort: 3006
  selector:
    run: rbp-message
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spme-ingress
  namespace: spme
spec:
  rules:
    - host: spme.local
      http:
        paths:
          - path: /booking/
            pathType: Prefix
            backend:
              service:
                name: rbp-booking
                port:
                  number: 3000
          - path: /room/
            pathType: Prefix
            backend:
              service:
                name: rbp-room
                port:
                  number: 3001
          - path: /branding/
            pathType: Prefix
            backend:
              service:
                name: rbp-branding
                port:
                  number: 3002
          - path: /auth/
            pathType: Prefix
            backend:
              service:
                name: rbp-auth
                port:
                  number: 3004
          - path: /report/
            pathType: Prefix
            backend:
              service:
                name: rbp-report
                port:
                  number: 3005
          - path: /message/
            pathType: Prefix
            backend:
              service:
                name: rbp-message
                port:
                  number: 3006
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rbp-assets
                port:
                  number: 3003
          - path: /js/
            pathType: Prefix
            backend:
              service:
                name: rbp-assets
                port:
                  number: 3003
          - path: /images/
            pathType: Prefix
            backend:
              service:
                name: rbp-assets
                port:
                  number: 3003
          - path: /actuator/
            pathType: Prefix
            backend:
              service:
                name: rbp-assets
                port:
                  number: 3003

